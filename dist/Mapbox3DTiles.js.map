{"version":3,"file":"Mapbox3DTiles.js","sources":["../modules/Constants.mjs","../modules/CameraSync.mjs","../modules/TileLoaders.mjs","../modules/InstanceRenderer.mjs","../modules/ThreeDeeTile.mjs","../modules/TileSet.mjs","../modules/Mapbox3DTiles.mjs"],"sourcesContent":["export const DEBUG = false;\r\n\r\nexport const MERCATOR_A = 6378137.0;\r\nexport const WORLD_SIZE = MERCATOR_A * Math.PI * 2;\r\n\r\n\r\nexport const ThreeboxConstants = {\r\n\tWORLD_SIZE: WORLD_SIZE,\r\n\tPROJECTION_WORLD_SIZE: WORLD_SIZE / (MERCATOR_A * Math.PI * 2),\r\n\tMERCATOR_A: MERCATOR_A,\r\n\tDEG2RAD: Math.PI / 180,\r\n\tRAD2DEG: 180 / Math.PI,\r\n\tEARTH_CIRCUMFERENCE: 40075000, // In meters\r\n}\r\n","import \"./Constants.mjs\"\r\nimport {MERCATOR_A, WORLD_SIZE, ThreeboxConstants} from \"./Constants.mjs\"\r\n\r\n/* \r\n  mapbox-gl uses a camera fixed at the orgin (the middle of the canvas) The camera is only updated when rotated (bearing angle), \r\n  pitched or when the map view is resized.\r\n  When panning and zooming the map, the desired part of the world is translated and zoomed in front of the camera. The world is only updated when\r\n  the map is panned or zoomed.\r\n\r\n  The mapbox-gl internal coordinate system has origin (0,0) located at longitude -180 degrees and latitude 0 degrees. \r\n  The scaling is 2^map.getZoom() * 512/EARTH_CIRCUMFERENCE_IN_METERS. At zoom=0 (scale=2^0=1), the whole world fits in 512 units.\r\n*/\r\nclass CameraSync {\r\n\tconstructor (map, camera, world) {\r\n\t  this.map = map;\r\n\t  this.camera = camera;\r\n\t  this.active = true;\r\n\t  this.updateCallback = ()=>{};\r\n\t  \r\n\t  this.camera.matrixAutoUpdate = false;   // We're in charge of the camera now!\r\n\t\r\n\t  // Postion and configure the world group so we can scale it appropriately when the camera zooms\r\n\t  this.world = world || new THREE.Group();\r\n\t  this.world.position.x = this.world.position.y = ThreeboxConstants.WORLD_SIZE/2;\r\n\t  this.world.matrixAutoUpdate = false;\r\n\t\r\n\t  //set up basic camera state\r\n\t  this.state = {\r\n\t\tfov: 0.6435011087932844, // Math.atan(0.75);\r\n\t\ttranslateCenter: new THREE.Matrix4(),\r\n\t\tworldSizeRatio: 512/ThreeboxConstants.WORLD_SIZE\r\n\t  };\r\n\t\r\n\t  this.state.translateCenter.makeTranslation(ThreeboxConstants.WORLD_SIZE/2, -ThreeboxConstants.WORLD_SIZE / 2, 0);\r\n\t\r\n\t  // Listen for move events from the map and update the Three.js camera. Some attributes only change when viewport resizes, so update those accordingly\r\n\t  this.map.on('move', ()=>this.updateCamera());\r\n\t  this.map.on('resize', ()=>this.setupCamera());\r\n\t  //this.map.on('moveend', ()=>this.updateCallback())\r\n  \r\n\t  this.setupCamera();\r\n\t}\r\n\tsetupCamera() {\r\n\t  var t = this.map.transform\r\n\t  const halfFov = this.state.fov / 2;\r\n\t  var cameraToCenterDistance = 0.5 / Math.tan(halfFov) * t.height;\r\n\t  \r\n\t  this.state.cameraToCenterDistance = cameraToCenterDistance;\r\n\t  this.state.cameraTranslateZ = new THREE.Matrix4().makeTranslation(0,0,cameraToCenterDistance);\r\n\t\r\n\t  this.updateCamera();\r\n\t}  \r\n\tupdateCamera(ev) {\r\n\t\r\n\t  if(!this.camera) {\r\n\t\tconsole.log('nocamera')\r\n\t\treturn;\r\n\t  }\r\n\t\r\n\t  var t = this.map.transform\r\n\t\r\n\t  var halfFov = this.state.fov / 2;\r\n\t  const groundAngle = Math.PI / 2 + t._pitch;\r\n\t  this.state.topHalfSurfaceDistance = Math.sin(halfFov) * this.state.cameraToCenterDistance / Math.sin(Math.PI - groundAngle - halfFov);\r\n\t\r\n\t  // Calculate z distance of the farthest fragment that should be rendered.\r\n\t  const furthestDistance = Math.cos(Math.PI / 2 - t._pitch) * this.state.topHalfSurfaceDistance + this.state.cameraToCenterDistance;\r\n\t  \r\n\t  // Add a bit extra to avoid precision problems when a fragment's distance is exactly `furthestDistance`\r\n\t  const farZ = furthestDistance * 1.01;    \r\n\t\r\n\t  this.camera.projectionMatrix = this.makePerspectiveMatrix(this.state.fov, t.width / t.height, 1, farZ);\r\n\t  \r\n\t\r\n\t  var cameraWorldMatrix = new THREE.Matrix4();\r\n\t  var rotatePitch = new THREE.Matrix4().makeRotationX(t._pitch);\r\n\t  var rotateBearing = new THREE.Matrix4().makeRotationZ(t.angle);\r\n\t\r\n\t  // Unlike the Mapbox GL JS camera, separate camera translation and rotation out into its world matrix\r\n\t  // If this is applied directly to the projection matrix, it will work OK but break raycasting\r\n\t\r\n\t  cameraWorldMatrix\r\n\t\t.premultiply(this.state.cameraTranslateZ)\r\n\t\t.premultiply(rotatePitch)\r\n\t\t.premultiply(rotateBearing);\r\n\t  \r\n\t\r\n\t  this.camera.matrixWorld.copy(cameraWorldMatrix);\r\n\t  \r\n\t  // Handle scaling and translation of objects in the map in the world's matrix transform, not the camera\r\n\t  let zoomPow = t.scale * this.state.worldSizeRatio;\r\n\t  let scale = new THREE.Matrix4();\r\n\t  scale.makeScale( zoomPow, zoomPow, zoomPow );\r\n\t  //console.log(`zoomPow: ${zoomPow}`);\r\n\t\r\n\t  let translateMap = new THREE.Matrix4();\r\n\t  \r\n\t  let x = -this.map.transform.x || -this.map.transform.point.x;\r\n\t  let y = this.map.transform.y || this.map.transform.point.y;\r\n\t  \r\n\t  translateMap.makeTranslation(x, y, 0);\r\n\t  \r\n\t  this.world.matrix = new THREE.Matrix4;\r\n\t  this.world.matrix\r\n\t\t//.premultiply(rotateMap)\r\n\t\t.premultiply(this.state.translateCenter)\r\n\t\t.premultiply(scale)\r\n\t\t.premultiply(translateMap);\r\n\t  let matrixWorldInverse = new THREE.Matrix4();\r\n\t  matrixWorldInverse.getInverse(this.world.matrix);\r\n  \r\n\t  this.camera.projectionMatrixInverse.getInverse(this.camera.projectionMatrix);\r\n\t  this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld);\r\n\t  this.frustum = new THREE.Frustum();\r\n\t  this.frustum.setFromProjectionMatrix(new THREE.Matrix4().multiplyMatrices(this.camera.projectionMatrix, this.camera.matrixWorldInverse));\r\n\t  \r\n\t  this.cameraPosition = new THREE.Vector3(0,0,0).unproject(this.camera).applyMatrix4(matrixWorldInverse);\r\n  \r\n\t  this.updateCallback();\r\n\t}\r\n\tmakePerspectiveMatrix(fovy, aspect, near, far) {\r\n\t\r\n\t  let out = new THREE.Matrix4();\r\n\t  let f = 1.0 / Math.tan(fovy / 2),\r\n\t  nf = 1 / (near - far);\r\n\t\r\n\t  let newMatrix = [\r\n\t\tf / aspect, 0, 0, 0,\r\n\t\t0, f, 0, 0,\r\n\t\t0, 0, (far + near) * nf, -1,\r\n\t\t0, 0, (2 * far * near) * nf, 0\r\n\t  ]\r\n\t\r\n\t  out.elements = newMatrix\r\n\t  return out;\r\n\t}\r\n  }\r\n\r\n  export default CameraSync;","class TileLoader {\r\n\t// This class contains the common code to load tile content, such as b3dm and pnts files.\r\n\t// It is not to be used directly. Instead, subclasses are used to implement specific \r\n\t// content loaders for different tile types.\r\n\tconstructor(url) {\r\n\t  this.url = url;\r\n\t  this.type = url.slice(-4);\r\n\t  this.version = null;\r\n\t  this.byteLength = null;\r\n\t  this.featureTableJSON = null;\r\n\t  this.featureTableBinary = null;\r\n\t  this.batchTableJson = null;\r\n\t  this.batchTableBinary = null;\r\n\t  this.binaryData = null;\r\n\t}\r\n\t// TileLoader.load\r\n\tasync load() {\r\n\t  let response = await fetch(this.url)            \r\n\t  if (!response.ok) {\r\n\t\tthrow new Error(`HTTP ${response.status} - ${response.statusText}`);\r\n\t  }\r\n\t  let buffer = await response.arrayBuffer();\r\n\t  let res = this.parseResponse(buffer);\r\n\t  return res;\r\n\t}\r\n\tasync parseResponse(buffer) {\r\n\t  let header = new Uint32Array(buffer.slice(0, 32));\r\n\t  let decoder = new TextDecoder();\r\n\t  let magic = decoder.decode(new Uint8Array(buffer.slice(0, 4)));\r\n\t  if (magic != this.type) {\r\n\t\tthrow new Error(`Invalid magic string, expected '${this.type}', got '${this.magic}'`);\r\n\t  }\r\n\t  this.version = header[1];\r\n\t  this.byteLength = header[2];\r\n\t  let featureTableJSONByteLength = header[3];\r\n\t  let featureTableBinaryByteLength = header[4];\r\n\t  let batchTableJsonByteLength = header[5];\r\n\t  let batchTableBinaryByteLength = header[6];\r\n\t  let gltfFormat = magic === 'i3dm' ? header[7] : 1;\r\n\t  \r\n\t  /*\r\n\t  console.log('magic: ' + magic);\r\n\t  console.log('version: ' + this.version);\r\n\t  console.log('featureTableJSONByteLength: ' + featureTableJSONByteLength);\r\n\t  console.log('featureTableBinaryByteLength: ' + featureTableBinaryByteLength);\r\n\t  console.log('batchTableJsonByteLength: ' + batchTableJsonByteLength);\r\n\t  console.log('batchTableBinaryByteLength: ' + batchTableBinaryByteLength);\r\n\t  */\r\n\t  \r\n\t  let pos = magic === 'i3dm' ? 32 : 28; // header length\r\n\t  if (featureTableJSONByteLength > 0) {\r\n\t\tthis.featureTableJSON = JSON.parse(decoder.decode(new Uint8Array(buffer.slice(pos, pos+featureTableJSONByteLength))));\r\n\t\tpos += featureTableJSONByteLength;\r\n\t  } else {\r\n\t\tthis.featureTableJSON = {};\r\n\t  }\r\n\t  this.featureTableBinary = buffer.slice(pos, pos+featureTableBinaryByteLength);\r\n\t  pos += featureTableBinaryByteLength;\r\n\t  if (batchTableJsonByteLength > 0) {\r\n\t\tthis.batchTableJson = JSON.parse(decoder.decode(new Uint8Array(buffer.slice(pos, pos+batchTableJsonByteLength))));\r\n\t\tpos += batchTableJsonByteLength;\r\n\t  } else {\r\n\t\tthis.batchTableJson = {};\r\n\t  }\r\n\t  this.batchTableBinary = buffer.slice(pos, pos+batchTableBinaryByteLength);\r\n\t  pos += batchTableBinaryByteLength;\r\n\t  if (gltfFormat === 1) {\r\n\t\tthis.binaryData = buffer.slice(pos);\r\n\t  } else {\r\n\t\t// load binary data from url at pos\r\n\t\tlet modelUrl = decoder.decode(new Uint8Array(buffer.slice(pos)));\r\n\t\tlet response = await fetch(modelUrl);\r\n\t\tif (!response.ok) {\r\n\t\t  throw new Error(`HTTP ${response.status} - ${response.statusText}`);\r\n\t\t}\r\n\t\tthis.binaryData = await response.arrayBuffer();\r\n\t  }\r\n\t  return this;\r\n\t}\r\n  }\r\n\t\r\n  class B3DM extends TileLoader {\r\n\tconstructor(url) {\r\n\t  super(url);\r\n\t  this.glbData = null;\r\n\t}\r\n\tparseResponse(buffer) {\r\n\t  super.parseResponse(buffer);\r\n\t  this.glbData = this.binaryData;\r\n\t  return this;\r\n\t}\r\n  }\r\n  \r\n  class PNTS extends TileLoader{\r\n\tconstructor(url) {\r\n\t  super(url);\r\n\t  this.points = new Float32Array();\r\n\t  this.rgba = null;\r\n\t  this.rgb = null;\r\n\t}\r\n\tparseResponse(buffer) {\r\n\t  super.parseResponse(buffer);\r\n\t  if (this.featureTableJSON.POINTS_LENGTH && this.featureTableJSON.POSITION) {\r\n\t\tlet len = this.featureTableJSON.POINTS_LENGTH;\r\n\t\tlet pos = this.featureTableJSON.POSITION.byteOffset;\r\n\t\tthis.points = new Float32Array(this.featureTableBinary.slice(pos, pos + len * Float32Array.BYTES_PER_ELEMENT * 3));\r\n\t\tthis.rtc_center = this.featureTableJSON.RTC_CENTER;\r\n\t\tif (this.featureTableJSON.RGBA) {\r\n\t\t  pos = this.featureTableJSON.RGBA.byteOffset;\r\n\t\t  let colorInts = new Uint8Array(this.featureTableBinary.slice(pos, pos + len * Uint8Array.BYTES_PER_ELEMENT * 4));\r\n\t\t  let rgba = new Float32Array(colorInts.length);\r\n\t\t  for (let i=0; i<colorInts.length; i++) {\r\n\t\t\trgba[i] = colorInts[i] / 255.0;\r\n\t\t  }\r\n\t\t  this.rgba = rgba;\r\n\t\t} else if (this.featureTableJSON.RGB) {\r\n\t\t  pos = this.featureTableJSON.RGB.byteOffset;\r\n\t\t  let colorInts = new Uint8Array(this.featureTableBinary.slice(pos, pos + len * Uint8Array.BYTES_PER_ELEMENT * 3));\r\n\t\t  let rgb = new Float32Array(colorInts.length);\r\n\t\t  for (let i=0; i<colorInts.length; i++) {\r\n\t\t\trgb[i] = colorInts[i] / 255.0;\r\n\t\t  }\r\n\t\t  this.rgb = rgb;\r\n\t\t} else if (this.featureTableJSON.RGB565) {\r\n\t\t  console.error('RGB565 is currently not supported in pointcloud tiles.')\r\n\t\t}\r\n\t  }\r\n\t  return this;\r\n\t}\r\n  }\r\n\r\nexport {B3DM, PNTS}","/* EXPERIMENTAL: */\r\nimport {MERCATOR_A, WORLD_SIZE, ThreeboxConstants} from \"./Constants.mjs\"\r\n\r\nlet project = function(coord){\r\n\tlet webmerc = '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs';\r\n\tlet ecef = '+proj=geocent +datum=WGS84 +units=m +no_defs';\r\n\tlet newcoord =  proj4(ecef,webmerc,{x:coord[0],y:coord[1],z:coord[2]});\r\n\treturn newcoord;\r\n}\r\n\r\nfunction projectToWorld(coords) {\r\n\t// Spherical mercator forward projection, re-scaling to WORLD_SIZE\r\n\tlet c = ThreeboxConstants;\r\n\tvar projected = [\r\n\t\tc.MERCATOR_A * c.DEG2RAD * coords[0] * c.PROJECTION_WORLD_SIZE,\r\n\t\tc.MERCATOR_A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * c.DEG2RAD * coords[1]) )) * c.PROJECTION_WORLD_SIZE\r\n\t];\r\n  \r\n\t//z dimension, defaulting to 0 if not provided\r\n\tif (!coords[2]) {\r\n\t  projected.push(0)\r\n\t} else {\r\n\t\tvar pixelsPerMeter = projectedUnitsPerMeter(coords[1]);\r\n\t\tprojected.push( coords[2] * pixelsPerMeter );\r\n\t}\r\n  \r\n\tvar result = new THREE.Vector3(projected[0], projected[1], projected[2]);\r\n\treturn result;\r\n}\r\n\r\n  export default function InstanceRender(gltf, positions, normalsRight, normalsUp, inverse) {\r\n\t\t// < Currently necessary projection functions:\r\n\t\tlet project = function(coord){\r\n\t\t\tlet webmerc = '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs';\r\n\t\t\tlet ecef = '+proj=geocent +datum=WGS84 +units=m +no_defs';\r\n\t\t\tlet newcoord =  proj4(ecef,webmerc,{x:coord[0],y:coord[1],z:coord[2]});\r\n\t\t\treturn newcoord;\r\n\t  }\r\n\r\n\t  let projpos = [];\r\n\t  for (let i=0;i < positions.length /3; i+=3){\r\n\t\t\tprojpos.push(project([positions[i+0],positions[i+1],positions[i+2]]));\r\n\t\t}\r\n\t\t// >\r\n\r\n\t\t// < Gather data from gltf:\r\n\t\tlet gltfMeshes = GetMeshesFromGLTF(gltf);\r\n\t\tlet gltfGeometries = GetGeometriesFromMeshes(gltfMeshes);\r\n\t\tlet gltfMaterials = GetMaterialsFromMeshes(gltfMeshes);\r\n\t\t// >\r\n\r\n\t\t// < Process data into geometries:\r\n\t\tvar meshCount = gltfMeshes.length;\r\n\t\tfor (var i = 0; i < meshCount; ++i) {\r\n\t\t}\r\n\t\t// >\r\n\t\t\r\n\t\t// < Instance Render Hack (first geometry only)\r\n\t\tvar instanceCount = positions.length / 3;\r\n\t\tconsole.log(instanceCount);\r\n\t\tvar geometry = gltfGeometries[0];\r\n\t\tvar geometry = geometry.toNonIndexed();\r\n\r\n\t\t// Instead of a geometry we build a triangle for testing.\r\n\t\tvar vertices = [];\r\n\t\tvertices.push(0.25, -0.25, 0);\r\n\t\tvertices.push(-0.25, 0.25, 0);\r\n\t\tvertices.push(0, 0, 0.25);\r\n\r\n\t\tvar offsets = [];\r\n\t\tvar color = new THREE.Color();\r\n\t\tvar colors = [];\r\n\r\n\t\t// Make first position the origin.\r\n\t\tvar origin = projpos[0];\r\n\r\n\t\tfor ( var i = 0; i < projpos.length; i ++ ) {\r\n\t\t\t// positions (temp hack to substract tileset transform)\r\n\t\t\tvar x = projpos[i].x - origin.x;\r\n\t\t\tvar y = projpos[i].y - origin.y;\r\n\t\t\tvar z = projpos[i].z - origin.z;\r\n\t\t\toffsets.push( x, y, z );\r\n\t\t\tcolor.setRGB( Math.random(), Math.random(), Math.random());\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t  }\r\n\t\t\r\n\t\tvar instancedGeometry = new THREE.InstancedBufferGeometry();\r\n\t\tinstancedGeometry.instanceCount = instanceCount;\r\n\t\t//instancedGeometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\t\tinstancedGeometry.setAttribute('position', geometry.getAttribute('position'));\r\n\t\t//console.log(geometry.getAttribute('position'));\r\n\t\tinstancedGeometry.setAttribute('offset', new THREE.InstancedBufferAttribute(new Float32Array(offsets), 3));\r\n\t\tinstancedGeometry.setAttribute('color', new THREE.InstancedBufferAttribute(new Float32Array(colors), 4));\r\n\t\tinstancedGeometry.computeVertexNormals();\r\n\t\tinstancedGeometry.computeBoundingBox();\r\n\t\tinstancedGeometry.computeBoundingSphere();\r\n\t\tinstancedGeometry.applyMatrix4(inverse);\r\n\r\n\t\tvar material = new THREE.RawShaderMaterial( {\r\n\t\t\tuniforms: {},\r\n\t\t\tvertexShader: vertexShader,\r\n\t\t\tfragmentShader: fragmentShader,\r\n\t\t\tside: THREE.DoubleSide,\r\n\t\t\ttransparent: false\r\n\t\t});\r\n\r\n\t\t// >\r\n\t\tvar mesh = new THREE.Mesh(instancedGeometry, material);\r\n\t\t// Set the position to the origin to offset the mesh where the geometries are drawn.\r\n\t\tmesh.position.set(origin.x, origin.y, origin.z);\r\n\t\treturn mesh;\r\n\r\n\t  var geometry = new THREE.BufferGeometry();\r\n\t  let worldpos = [];\r\n\t\t\r\n\t  for ( var i = 0; i < projpos.length; i ++ ) {\r\n\t\t\t// positions (temp hack to substract tileset transform)\r\n\t\t\tvar x = projpos[i].x - origin.x; // - 549852;\r\n\t\t\tvar y = projpos[i].y - origin.y; // - 6856912;\r\n\t\t\tvar z = projpos[i].z - origin.z;\r\n\t\t\tworldpos.push( x, y, z );\r\n\r\n\t\t\t// colors\r\n\t\t\tcolor.setRGB( Math.random(), Math.random(), Math.random());\r\n\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t  }\r\n\t\tgeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( worldpos, 3 ) );\r\n\t  geometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\r\n\t  geometry.computeBoundingSphere();\r\n\t  geometry.computeBoundingBox();\r\n\t  geometry.applyMatrix4(inverse);\r\n\t\tvar material = new THREE.PointsMaterial( { size: 15, vertexColors: true } );\r\n\t\t\r\n\t\tvar weirdmesh = new THREE.Mesh(geometry, material);\r\n\t\tweirdmesh.position.set(origin.x, origin.y, origin.z);\r\n\t  return weirdmesh;\r\n}\r\n\r\nfunction GetMeshesFromGLTF( gltf ) {\r\n\tvar meshes = [];\r\n\tgltf.scene.traverse(child => {\r\n\t\tif (child instanceof THREE.Mesh) {\r\n\t\t\tmeshes.push(child);\r\n\t\t}\r\n\t});\r\n\treturn meshes;\r\n}\r\n\r\nfunction GetGeometriesFromMeshes( meshes ) {\r\n\tvar geometries = [];\r\n\tvar meshCount = meshes.length;\r\n\tfor (var i = 0; i < meshCount; ++i) {\r\n\t\tgeometries.push(meshes[i].geometry);\r\n\t}\r\n\treturn geometries;\r\n}\r\n\r\nfunction GetMaterialsFromMeshes( meshes ) {\r\n\tvar materials = [];\r\n\tvar meshCount = meshes.length;\r\n\tfor (var i = 0; i < meshCount; ++i) {\r\n\t\tmaterials.push(meshes[i].material);\r\n\t}\r\n\treturn materials;\r\n}\r\n\r\n// export default function InstanceRender(gltf, positions, normalsUp, normalsRight, inverse) {\r\n// \tlet count = positions.length / 3;\r\n// \tvar meshes = [];\r\n\r\n// \tlet projected = [];\r\n// \tfor (let i=0; i < count; ++i){\r\n// \t\tprojected.push(project([positions[i+0] - 549852 ,positions[i+1] - 6856912,positions[i+2]]));\r\n// \t}\r\n\r\n// \tvar a = new THREE.Mesh();\r\n// \tgltf.scene.traverse(child => {\r\n// \t\tif (child instanceof THREE.Mesh) {\r\n// \t\t\tconsole.log(child.name);\r\n// \t\t}\r\n// \t});\r\n\r\n// \tvar scene = new THREE.Scene();\r\n\r\n// \tlet matrix = new THREE.Matrix4();\r\n// \tmatrix.makeRotationX(Math.PI/2);\r\n// \tscene.applyMatrix4(matrix);\r\n\r\n// \t// mesh vertices (replace with the geometry of the actual mesh unindexed if it doesnt work, and converted from geometry to buffergeometry)\r\n// \tvar vertices = [];\r\n\r\n// \t// Temporary triangle to replace an actual mesh\r\n// \tvertices.push(250, -250, 0);\r\n// \tvertices.push(-250, 250, 0);\r\n// \tvertices.push(0, 0, 250);\r\n\r\n// \tvar colors = [];\r\n// \tfor (var i = 0; i < count; ++i) {\r\n// \t\tcolors.push(Math.random(), Math.random(), Math.random(), 1);\r\n// \t}\r\n\r\n// \tvar geometry = new THREE.InstancedBufferGeometry();\r\n// \tgeometry.instanceCount = count;\r\n\t\t\r\n// \t// Load mesh positions into shader.\r\n// \tgeometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n\r\n// \t// Load world positions into shader.\r\n// \tgeometry.setAttribute('offset', new THREE.InstancedBufferAttribute(new Float32Array(projected), 3));\r\n// \t// Load colors into shader\r\n// \tgeometry.setAttribute('color', new THREE.InstancedBufferAttribute(new Float32Array(colors), 4));\r\n\t\r\n// \tgeometry.computeBoundingSphere();\r\n// \tgeometry.computeBoundingBox();\r\n// \t//geometry.applyMatrix4(inverse);\r\n\r\n// \tvar material = new THREE.RawShaderMaterial({\r\n// \t\tuniforms: {},\r\n// \t\tvertexShader: vertexShader,\r\n// \t\tfragmentShader: fragmentShader,\r\n// \t\tside: THREE.DoubleSide,\r\n// \t\ttransparent: false\r\n// \t});\r\n\r\n// \tvar mesh = new THREE.Mesh(geometry, material);\r\n// \tscene.add(mesh);\r\n// \tconsole.log(scene);\r\n// \treturn mesh;\r\n// }\r\n\r\n// function GetVector3FromData(data) {\r\n// \tvar array = [];\r\n// \tvar count = data.length;\r\n// \tfor (var i = 0; i < count; i+=3) {\r\n// \t\tvar pos = [data[i], data[i+1], data[i+2]]\r\n// \t\tarray.push(pos);\r\n// \t}\r\n// \treturn array;\r\n// }\r\n\r\n// function GetVector4FromData(data) {\r\n// \tvar array = [];\r\n// \tvar count = data.length;\r\n// \tfor (var i = 0; i < count; i+=4) {\r\n// \t\tarray.push(data[i], data[i+1], data[i+2], data[i+3]);\r\n// \t}\r\n// \treturn array;\r\n// }\r\n\r\nvar vertexShader =\r\n\t`\r\n\tprecision highp float;\r\n\r\n\tuniform mat4 modelViewMatrix;\r\n\tuniform mat4 projectionMatrix;\r\n\r\n\tattribute vec3 position;\r\n\tattribute vec3 offset;\r\n\tattribute vec4 color;\r\n\r\n\tvarying vec3 vPosition;\r\n\tvarying vec4 vColor;\r\n\r\n\tvoid main(){\r\n\r\n\t\tvPosition = offset + position;\r\n\t\tvColor = color;\r\n\r\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( vPosition, 1.0 );\r\n\r\n\t}\r\n\t`\r\n;\r\n\r\nvar fragmentShader =\r\n\t`\r\n\tprecision highp float;\r\n\r\n\tvarying vec3 vPosition;\r\n\tvarying vec4 vColor;\r\n\r\n\tvoid main() {\r\n\r\n\t\tvec4 color = vec4( vColor );\r\n\t\tgl_FragColor = color;\r\n\r\n\t}\r\n\t\t`\r\n;","import {DEBUG} from \"./Constants.mjs\"\r\nimport {PNTS, B3DM} from \"./TileLoaders.mjs\"\r\nimport InstanceRender from \"./InstanceRenderer.mjs\"\r\n\r\nexport default class ThreeDeeTile {\r\n\tconstructor(json, resourcePath, styleParams, updateCallback, parentRefine, parentTransform) {\r\n\t  this.loaded = false;\r\n\t  this.styleParams = styleParams;\r\n\t  this.updateCallback = updateCallback;\r\n\t  this.resourcePath = resourcePath;\r\n\t  this.totalContent = new THREE.Group();  // Three JS Object3D Group for this tile and all its children\r\n\t  this.tileContent = new THREE.Group();    // Three JS Object3D Group for this tile's content\r\n\t  this.childContent = new THREE.Group();    // Three JS Object3D Group for this tile's children\r\n\t  this.totalContent.add(this.tileContent);\r\n\t  this.totalContent.add(this.childContent);\r\n\t  this.boundingVolume = json.boundingVolume;\r\n\t  if (this.boundingVolume && this.boundingVolume.box) {\r\n\t\tlet b = this.boundingVolume.box;\r\n\t\tlet extent = [b[0] - b[3], b[1] - b[7], b[0] + b[3], b[1] + b[7]];\r\n\t\tlet sw = new THREE.Vector3(extent[0], extent[1], b[2] - b[11]);\r\n\t\tlet ne = new THREE.Vector3(extent[2], extent[3], b[2] + b[11]);\r\n\t\tthis.box = new THREE.Box3(sw, ne);\r\n\t\tif (DEBUG) {\r\n\t\t  let geom = new THREE.BoxGeometry(b[3] * 2, b[7] * 2, b[11] * 2);\r\n\t\t  let edges = new THREE.EdgesGeometry( geom );\r\n\t\t  this.debugColor = new THREE.Color( 0xffffff );\r\n\t\t  this.debugColor.setHex( Math.random() * 0xffffff );\r\n\t\t  let line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( {color:this.debugColor }) );\r\n\t\t  let trans = new THREE.Matrix4().makeTranslation(b[0], b[1], b[2]);\r\n\t\t  line.applyMatrix4(trans);\r\n\t\t  this.debugLine = line;\r\n\t\t}\r\n\t  } else {\r\n\t\tthis.extent = null;\r\n\t\tthis.sw = null;\r\n\t\tthis.ne = null;\r\n\t\tthis.box = null;\r\n\t\tthis.center = null;\r\n\t  }\r\n\t  this.refine = json.refine ? json.refine.toUpperCase() : parentRefine;\r\n\t  this.geometricError = json.geometricError;\r\n\t  this.worldTransform = parentTransform ? parentTransform.clone() : new THREE.Matrix4();\r\n\t  this.transform = json.transform;\r\n\t  if (this.transform) \r\n\t  { \r\n\t\tlet tileMatrix = new THREE.Matrix4().fromArray(this.transform);\r\n\t\tthis.totalContent.applyMatrix4(tileMatrix);\r\n\t\tthis.worldTransform.multiply(tileMatrix);\r\n\t  }\r\n\t  this.content = json.content;\r\n\t  this.children = [];\r\n\t  if (json.children) {\r\n\t\tfor (let i=0; i<json.children.length; i++){\r\n\t\t  let child = new ThreeDeeTile(json.children[i], resourcePath, styleParams, updateCallback, this.refine, this.worldTransform);\r\n\t\t  this.childContent.add(child.totalContent);\r\n\t\t  this.children.push(child);\r\n\t\t}\r\n\t  }\r\n\t}\r\n\t//ThreeDeeTile.load\r\n\tasync load() {\r\n\t  if (this.unloadedTileContent) {\r\n\t\tthis.totalContent.add(this.tileContent);\r\n\t\tthis.unloadedTileContent = false;\r\n\t  }\r\n\t  if (this.unloadedChildContent) {\r\n\t\tthis.totalContent.add(this.childContent);\r\n\t\tthis.unloadedChildContent = false;\r\n\t  }\r\n\t  if (this.unloadedDebugContent) {\r\n\t\tthis.totalContent.add(this.debugLine);\r\n\t\tthis.unloadedDebugContent = false;\r\n\t  }\r\n\t  if (this.loaded) {\r\n\t\tthis.updateCallback();\r\n\t\treturn;\r\n\t  }\r\n\t  this.loaded = true;\r\n\t  if (this.debugLine) {        \r\n\t\tthis.totalContent.add(this.debugLine);\r\n\t  }\r\n\t  if (this.content) {\r\n\t\tlet url = this.content.uri ? this.content.uri : this.content.url;\r\n\t\tif (!url) return;\r\n\t\tif (url.substr(0, 4) != 'http')\r\n\t\t  url = this.resourcePath + url;\r\n\t\tlet type = url.slice(-4);\r\n\t\tswitch (type) {\r\n\t\t  case 'json':\r\n\t\t\t// child is a tileset json\r\n\t\t\ttry {\r\n\t\t\t  let subTileset = new TileSet(()=>this.updateCallback());\r\n\t\t\t  await subTileset.load(url, this.styleParams);\r\n\t\t\t  if (subTileset.root) {\r\n\t\t\t\tthis.box.applyMatrix4(this.worldTransform);\r\n\t\t\t\tlet inverseMatrix = new THREE.Matrix4().getInverse(this.worldTransform);\r\n\t\t\t\tthis.totalContent.applyMatrix4(inverseMatrix);\r\n\t\t\t\tthis.totalContent.updateMatrixWorld();\r\n\t\t\t\tthis.worldTransform = new THREE.Matrix4();\r\n  \r\n\t\t\t\tthis.children.push(subTileset.root);\r\n\t\t\t\tthis.childContent.add(subTileset.root.totalContent);\r\n\t\t\t\tsubTileset.root.totalContent.updateMatrixWorld();\r\n\t\t\t\tsubTileset.root.checkLoad(this.frustum, this.cameraPosition);\r\n\t\t\t  }\r\n\t\t\t} catch (error) {\r\n\t\t\t  // load failed (wrong url? connection issues?)\r\n\t\t\t  // log error, do not break program flow\r\n\t\t\t  console.error(error);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t  case 'b3dm':\r\n\t\t\ttry {\r\n\t\t\t  let loader = new THREE.GLTFLoader();\r\n\t\t\t  let b3dm = new B3DM(url);\r\n\t\t\t  let rotateX = new THREE.Matrix4().makeRotationAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n\t\t\t  this.tileContent.applyMatrix4(rotateX); // convert from GLTF Y-up to Z-up\r\n\t\t\t  let b3dmData = await b3dm.load();\r\n\t\t\t  loader.parse(b3dmData.glbData, this.resourcePath, (gltf) => {\r\n\t\t\t\t  \r\n\t\t\t\t  gltf.scene.traverse(child => {\r\n\t\t\t\t\tif (child instanceof THREE.Mesh) {\r\n\t\t\t\t\t  // some gltf has wrong bounding data, recompute here\r\n\t\t\t\t\t  child.geometry.computeBoundingBox();\r\n\t\t\t\t\t  child.geometry.computeBoundingSphere();\r\n\t\t\t\t\t  child.material.depthWrite = true; // necessary for Velsen dataset?\r\n\t\t\t\t\t  //Add the batchtable to the userData since gltLoader doesn't deal with it\r\n\t\t\t\t\t  child.userData = b3dmData.batchTableJson;\r\n\t\t\t\t\t}\r\n\t\t\t\t  });\r\n\t\t\t\t  if (this.styleParams.color != null || this.styleParams.opacity != null) {\r\n\t\t\t\t\tlet color = new THREE.Color(this.styleParams.color);\r\n\t\t\t\t\tgltf.scene.traverse(child => {\r\n\t\t\t\t\t  if (child instanceof THREE.Mesh) {\r\n\t\t\t\t\t\tif (this.styleParams.color != null) \r\n\t\t\t\t\t\t  child.material.color = color;\r\n\t\t\t\t\t\tif (this.styleParams.opacity != null) {\r\n\t\t\t\t\t\t  child.material.opacity = this.styleParams.opacity;\r\n\t\t\t\t\t\t  child.material.transparent = this.styleParams.opacity < 1.0 ? true : false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t});\r\n\t\t\t\t  }\r\n\t\t\t\t  if (this.debugColor) {\r\n\t\t\t\t\tgltf.scene.traverse(child => {\r\n\t\t\t\t\t  if (child instanceof THREE.Mesh) {\r\n\t\t\t\t\t\tchild.material.color = this.debugColor;\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t})\r\n\t\t\t\t  }\r\n\t\t\t\t  this.tileContent.add(gltf.scene);\r\n\t\t\t\t}, (error) => {\r\n\t\t\t\t  throw new Error('error parsing gltf: ' + error);\r\n\t\t\t\t}\r\n\t\t\t  );\r\n\t\t\t} catch (error) {\r\n\t\t\t  console.error(error);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t  case 'pnts':\r\n\t\t\ttry {\r\n\t\t\t  let pnts = new PNTS(url);\r\n\t\t\t  let pointData = await pnts.load();            \r\n\t\t\t  let geometry = new THREE.BufferGeometry();\r\n\t\t\t  geometry.setAttribute('position', new THREE.Float32BufferAttribute(pointData.points, 3));\r\n\t\t\t  let material = new THREE.PointsMaterial();\r\n\t\t\t  material.size = this.styleParams.pointsize != null ? this.styleParams.pointsize : 1.0;\r\n\t\t\t  if (this.styleParams.color) {\r\n\t\t\t\tmaterial.vertexColors = THREE.NoColors;\r\n\t\t\t\tmaterial.color = new THREE.Color(this.styleParams.color);\r\n\t\t\t\tmaterial.opacity = this.styleParams.opacity != null ? this.styleParams.opacity : 1.0;\r\n\t\t\t  } else if (pointData.rgba) {\r\n\t\t\t\tgeometry.setAttribute('color', new THREE.Float32BufferAttribute(pointData.rgba, 4));\r\n\t\t\t\tmaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t  } else if (pointData.rgb) {\r\n\t\t\t\tgeometry.setAttribute('color', new THREE.Float32BufferAttribute(pointData.rgb, 3));\r\n\t\t\t\tmaterial.vertexColors = THREE.VertexColors;\r\n\t\t\t  }\r\n\t\t\t  this.tileContent.add(new THREE.Points( geometry, material ));\r\n\t\t\t  if (pointData.rtc_center) {\r\n\t\t\t\tlet c = pointData.rtc_center;\r\n\t\t\t\tthis.tileContent.applyMatrix4(new THREE.Matrix4().makeTranslation(c[0], c[1], c[2]));\r\n\t\t\t  }\r\n\t\t\t  this.tileContent.add(new THREE.Points( geometry, material ));\r\n\t\t\t} catch (error) {\r\n\t\t\t  console.error(error);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t  case 'i3dm':\r\n\t\t\ttry {\r\n\t\t\t  let loader = new THREE.GLTFLoader();\r\n\t\t\t  let i3dm = new B3DM(url);\r\n\t\t\t  //let rotateX = new THREE.Matrix4().makeRotationAxis(new THREE.Vector3(1, 0, 0), Math.PI / 2);\r\n\t\t\t  //this.tileContent.applyMatrix4(rotateX); // convert from GLTF Y-up to Z-up\r\n\r\n\t\t\t  let i3dmData = await i3dm.load();\r\n\t\t\t  // Check what metadata is present in the featuretable, currently using: https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/Instanced3DModel#instance-orientation.\r\n\t\t\t  let positions = new Float32Array(i3dmData.featureTableBinary, i3dmData.featureTableJSON.POSITION.byteOffset, i3dmData.featureTableJSON.INSTANCES_LENGTH * 3);  \r\n\t\t\t  let normalsRight = new Float32Array(i3dmData.featureTableBinary, i3dmData.featureTableJSON.NORMAL_RIGHT.byteOffset, i3dmData.featureTableJSON.INSTANCES_LENGTH * 3);\r\n\t\t\t  let normalsUp = new Float32Array(i3dmData.featureTableBinary, i3dmData.featureTableJSON.NORMAL_UP.byteOffset, i3dmData.featureTableJSON.INSTANCES_LENGTH * 3);\r\n\t\t\t  let inverseMatrix = new THREE.Matrix4().getInverse(this.worldTransform);\r\n\r\n\t\t\t  loader.parse(i3dmData.glbData, this.resourcePath, (gltf) => {\r\n\t\t\t\tgltf.scene.traverse(child => {\r\n\t\t\t\t  if (child instanceof THREE.Mesh) {\r\n\t\t\t\t\t// some gltf has wrong bounding data, recompute here\r\n\t\t\t\t\tchild.geometry.computeBoundingBox();\r\n\t\t\t\t\tchild.geometry.computeBoundingSphere();\r\n\t\t\t\t\tchild.material.depthWrite = true; // necessary for Velsen dataset?\r\n\t\t\t\t\t//Add the batchtable to the userData since gltLoader doesn't deal with it\r\n\t\t\t\t\tchild.userData = i3dmData.batchTableJson;\r\n\t\t\t\t  }\r\n\t\t\t\t});\r\n\t\t\t\tthis.tileContent.add(InstanceRender(gltf, positions, normalsRight, normalsUp, inverseMatrix)); \r\n\t\t\t  });\r\n\t\t\t} catch (error) {\r\n\t\t\t  console.error(error.message);\r\n\t\t\t}\r\n\t\t\t//throw new Error('i3dm tiles not yet implemented');\r\n\t\t\tbreak;\r\n\t\t  case 'cmpt':\r\n\t\t\tthrow new Error('cmpt tiles not yet implemented');\r\n\t\t\tbreak;\r\n\t\t  default:\r\n\t\t\tthrow new Error('invalid tile type: ' + type);\r\n\t\t}\r\n\t  }\r\n\t  this.updateCallback();\r\n\t}\r\n\tunload(includeChildren) {\r\n\t  this.unloadedTileContent = true;\r\n\t  this.totalContent.remove(this.tileContent);\r\n  \r\n\t  //this.tileContent.visible = false;\r\n\t  if (includeChildren) {\r\n\t\tthis.unloadedChildContent = true;\r\n\t\tthis.totalContent.remove(this.childContent);\r\n\t\t//this.childContent.visible = false;\r\n\t  } else  {\r\n\t\tif (this.unloadedChildContent) {\r\n\t\t  this.unloadedChildContent = false;\r\n\t\t  this.totalContent.add(this.childContent);\r\n\t\t}\r\n\t  }\r\n\t  if (this.debugLine) {\r\n\t\tthis.totalContent.remove(this.debugLine);\r\n\t\tthis.unloadedDebugContent = true;\r\n\t  }\r\n\t  this.updateCallback();\r\n\t  // TODO: should we also free up memory?\r\n\t}\r\n\tcheckLoad(frustum, cameraPosition) {\r\n  \r\n\t  this.frustum = frustum;\r\n\t  this.cameraPosition = cameraPosition;\r\n\t  /*this.load();\r\n\t  for (let i=0; i<this.children.length;i++) {\r\n\t\tthis.children[i].checkLoad(frustum, cameraPosition);\r\n\t  }\r\n\t  return;\r\n\t  */\r\n  \r\n\t  /*if (this.totalContent.parent.name === \"world\") {\r\n\t\tthis.totalContent.parent.updateMatrixWorld();\r\n\t  }*/\r\n\t  let transformedBox = this.box.clone();\r\n\t  transformedBox.applyMatrix4(this.totalContent.matrixWorld);\r\n\t  \r\n\t  // is this tile visible?\r\n\t  if (!frustum.intersectsBox(transformedBox)) {\r\n\t\tthis.unload(true);\r\n\t\treturn;\r\n\t  }\r\n\t  \r\n\t  let worldBox = this.box.clone().applyMatrix4(this.worldTransform);\r\n\t  let dist = worldBox.distanceToPoint(cameraPosition);\r\n\t  \r\n  \r\n\t  //console.log(`dist: ${dist}, geometricError: ${this.geometricError}`);\r\n\t  // are we too far to render this tile?\r\n\t  if (this.geometricError > 0.0 && dist > this.geometricError * 50.0) {\r\n\t\tthis.unload(true);\r\n\t\treturn;\r\n\t  }\r\n\t  //console.log(`camPos: ${cameraPosition.z}, dist: ${dist}, geometricError: ${this.geometricError}`);\r\n\t  \r\n\t  // should we load this tile?\r\n\t  if (this.refine == 'REPLACE' && dist < this.geometricError * 20.0) {\r\n\t\tthis.unload(false);\r\n\t  } else {\r\n\t\tthis.load();\r\n\t  }\r\n\t  \r\n\t  \r\n\t  // should we load its children?\r\n\t  for (let i=0; i<this.children.length; i++) {\r\n\t\tif (dist < this.geometricError * 20.0) {\r\n\t\t  this.children[i].checkLoad(frustum, cameraPosition);\r\n\t\t} else {\r\n\t\t  this.children[i].unload(true);\r\n\t\t}\r\n\t  }\r\n  \r\n\t  /*\r\n\t  // below code loads tiles based on screenspace instead of geometricError,\r\n\t  // not sure yet which algorith is better so i'm leaving this code here for now\r\n\t  let sw = this.box.min.clone().project(camera);\r\n\t  let ne = this.box.max.clone().project(camera);      \r\n\t  let x1 = sw.x, x2 = ne.x;\r\n\t  let y1 = sw.y, y2 = ne.y;\r\n\t  let tilespace = Math.sqrt((x2 - x1)*(x2 - x1) + (y2 - y1)*(y2 - y1)); // distance in screen space\r\n\t  \r\n\t  if (tilespace < 0.2) {\r\n\t\tthis.unload();\r\n\t  }\r\n\t  // do nothing between 0.2 and 0.25 to avoid excessive tile loading/unloading\r\n\t  else if (tilespace > 0.25) {\r\n\t\tthis.load();\r\n\t\tthis.children.forEach(child => {\r\n\t\t  child.checkLoad(camera);\r\n\t\t});\r\n\t  }*/\r\n\t  \r\n\t}\r\n  }\r\n","import ThreeDeeTile from \"./ThreeDeeTile.mjs\"\r\n\r\nexport default class TileSet {\r\n\tconstructor(updateCallback){\r\n\t  if (!updateCallback) {\r\n\t\tupdateCallback = ()=>{};\r\n\t  }\r\n\t  this.updateCallback = updateCallback;\r\n\t  this.url = null;\r\n\t  this.version = null;\r\n\t  this.gltfUpAxis = 'Z';\r\n\t  this.geometricError = null;\r\n\t  this.root = null;\r\n\t}\r\n\t// TileSet.load\r\n\tasync load(url, styleParams) {\r\n\t  this.url = url;\r\n\t  let resourcePath = THREE.LoaderUtils.extractUrlBase(url);\r\n\t  \r\n\t  let response = await fetch(this.url);\r\n\t  if (!response.ok) {\r\n\t\tthrow new Error(`HTTP ${response.status} - ${response.statusText}`);\r\n\t  }\r\n\t  let json = await response.json();    \r\n\t  this.version = json.asset.version;\r\n\t  this.geometricError = json.geometricError;\r\n\t  this.refine = json.root.refine ? json.root.refine.toUpperCase() : 'ADD';\r\n\t  this.root = new ThreeDeeTile(json.root, resourcePath, styleParams, this.updateCallback, this.refine);\r\n\t  return;\r\n\t}\r\n}\r\n","import {MERCATOR_A, WORLD_SIZE, ThreeboxConstants} from \"./Constants.mjs\"\r\nimport CameraSync from \"./CameraSync.mjs\";\r\nimport TileSet from \"./TileSet.mjs\"\r\n\r\nexport function projectedUnitsPerMeter(latitude) {\r\n  let c = ThreeboxConstants;\r\n  return Math.abs( c.WORLD_SIZE / Math.cos( c.DEG2RAD * latitude ) / c.EARTH_CIRCUMFERENCE );\r\n}\r\n\r\nexport function projectToWorld(coords) {\r\n  // Spherical mercator forward projection, re-scaling to WORLD_SIZE\r\n  let c = ThreeboxConstants;\r\n  var projected = [\r\n      c.MERCATOR_A * c.DEG2RAD * coords[0] * c.PROJECTION_WORLD_SIZE,\r\n      c.MERCATOR_A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * c.DEG2RAD * coords[1]) )) * c.PROJECTION_WORLD_SIZE\r\n  ];\r\n\r\n  //z dimension, defaulting to 0 if not provided\r\n  if (!coords[2]) {\r\n    projected.push(0)\r\n  } else {\r\n      var pixelsPerMeter = projectedUnitsPerMeter(coords[1]);\r\n      projected.push( coords[2] * pixelsPerMeter );\r\n  }\r\n\r\n  var result = new THREE.Vector3(projected[0], projected[1], projected[2]);\r\n\r\n  return result;\r\n}\r\n\r\nexport default class Layer {\r\n\tconstructor (params) {\r\n\t  if (!params) throw new Error('parameters missing for mapbox 3D tiles layer');\r\n\t  if (!params.id) throw new Error('id parameter missing for mapbox 3D tiles layer');\r\n\t  //if (!params.url) throw new Error('url parameter missing for mapbox 3D tiles layer');\r\n\t  \r\n\t  this.id = params.id,\r\n\t  this.url = params.url;\r\n\t  this.styleParams = {};\r\n\t  if ('color' in params) this.styleParams.color = params.color;\r\n\t  if ('opacity' in params) this.styleParams.opacity = params.opacity;\r\n\t  if ('pointsize' in params) this.styleParams.pointsize = params.pointsize;\r\n  \r\n\t  this.loadStatus = 0;\r\n\t  this.viewProjectionMatrix = null;\r\n\t  \r\n\t  this.type = 'custom';\r\n\t  this.renderingMode = '3d';\r\n\t}\r\n\tLightsArray() {\r\n\t  const arr = [];\r\n\t  let directionalLight1 = new THREE.DirectionalLight(0xffffff,0.5);\r\n\t  directionalLight1.position.set(0.5, 1, 0.5).normalize();\r\n\t  let target = directionalLight1.target.position.set(100000000, 1000000000, 0).normalize();\r\n\t  arr.push(directionalLight1);\r\n  \r\n\t  let directionalLight2 = new THREE.DirectionalLight(0xffffff,0.5);\r\n\t  //directionalLight2.position.set(0, 70, 100).normalize();\r\n\t  directionalLight2.position.set(0.3, 0.3, 1).normalize();\r\n\t  arr.push(directionalLight2);\r\n  \r\n\t  //arr.push(new THREE.DirectionalLightHelper( directionalLight1, 500));\r\n\t  //arr.push(new THREE.DirectionalLightHelper( directionalLight2, 500));     \r\n  \r\n\t\t\t//this.scene.background = new THREE.Color( 0xaaaaaa );\r\n\t\t\t//this.scene.add( new THREE.DirectionalLight() );\r\n\t\t\t//this.scene.add( new THREE.HemisphereLight() );\r\n\t  return arr;\r\n\t}\r\n\tloadVisibleTiles() {\r\n\t  if (this.tileset && this.tileset.root) {\r\n\t\t//console.log(`map width: ${this.map.transform.width}, height: ${this.map.transform.height}`);\r\n\t\t//console.log(`Basegeometric error: ${40000000/(512*Math.pow(2,this.map.getZoom()))}`)\r\n\t\tthis.tileset.root.checkLoad(this.cameraSync.frustum, this.cameraSync.cameraPosition);\r\n\t  }\r\n\t}\r\n\tonAdd(map, gl) {\r\n\t  this.map = map;\r\n\t  const fov = 36.8;\r\n\t  const aspect = map.getCanvas().width/map.getCanvas().height;\r\n\t  const near = 0.000000000001;\r\n\t  const far = Infinity;\r\n\t  // create perspective camera, parameters reinitialized by CameraSync\r\n\t  this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n  \r\n\t  this.mapQueryRenderedFeatures = map.queryRenderedFeatures.bind(this.map);\r\n\t  this.map.queryRenderedFeatures = this.queryRenderedFeatures.bind(this);\r\n\t\t\t\r\n\t  this.scene = new THREE.Scene();\r\n\t  this.rootTransform = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\t  let lightsarray = this.LightsArray();\r\n\t  lightsarray.forEach(light=>{\r\n\t\tthis.scene.add(light);\r\n\t  });\r\n\t  this.world = new THREE.Group();\r\n\t  this.world.name = 'flatMercatorWorld';\r\n\t  this.scene.add(this.world);\r\n  \r\n\t  this.renderer = new THREE.WebGLRenderer({\r\n\t\talpha: true, \r\n\t\tantialias: true, \r\n\t\tcanvas: map.getCanvas(),\r\n\t\tcontext: gl,\r\n\t  });\r\n\t  \r\n\t  this.renderer.shadowMap.enabled = true;\r\n\t  this.renderer.autoClear = false;\r\n  \r\n\t  this.cameraSync = new CameraSync(this.map, this.camera, this.world);\r\n\t  this.cameraSync.updateCallback = ()=>this.loadVisibleTiles();\r\n\t  \r\n\t  //raycaster for mouse events\r\n\t  this.raycaster = new THREE.Raycaster();\r\n\t  if (this.url) {\r\n\t\tthis.tileset = new TileSet(()=>this.map.triggerRepaint());\r\n\t\tthis.tileset.load(this.url, this.styleParams).then(()=>{\r\n\t\tif (this.tileset.root) {\r\n\t\t  this.world.add(this.tileset.root.totalContent);\r\n\t\t  this.world.updateMatrixWorld();\r\n\t\t  this.loadStatus = 1;\r\n\t\t  this.loadVisibleTiles();\r\n\t\t}\r\n\t  }).catch(error=>{\r\n\t\tconsole.error(`${error} (${this.url})`);\r\n\t  })\r\n\t  }\r\n\t}\r\n\tonRemove(map, gl) {\r\n\t  // todo: (much) more cleanup?\r\n\t  this.map.queryRenderedFeatures = this.mapQueryRenderedFeatures;\r\n\t  this.cameraSync = null;\r\n\t}\r\n\tqueryRenderedFeatures(geometry, options){\r\n\t  let result = this.mapQueryRenderedFeatures(geometry, options);\r\n\t  if (!this.map || !this.map.transform) {\r\n\t\treturn result;\r\n\t  }\r\n\t  if (!(options && options.layers && !options.layers.includes(this.id))) {\r\n\t\tif (geometry && geometry.x && geometry.y) {     \r\n\t\t  var mouse = new THREE.Vector2();\r\n\t\t  \r\n\t\t  // // scale mouse pixel position to a percentage of the screen's width and height\r\n\t\t  mouse.x = ( geometry.x / this.map.transform.width ) * 2 - 1;\r\n\t\t  mouse.y = 1 - ( geometry.y / this.map.transform.height ) * 2;\r\n  \r\n\t\t  this.raycaster.setFromCamera(mouse, this.camera);\r\n  \r\n\t\t  // calculate objects intersecting the picking ray\r\n\t\t  let intersects = this.raycaster.intersectObjects(this.world.children, true);\r\n\t\t  if (intersects.length) {\r\n\t\t\tlet feature = {\r\n\t\t\t  \"type\": \"Feature\",\r\n\t\t\t  \"properties\" : {},\r\n\t\t\t  \"geometry\" :{},\r\n\t\t\t  \"layer\": {\"id\": this.id, \"type\": \"custom 3d\"},\r\n\t\t\t  \"source\": this.url,\r\n\t\t\t  \"source-layer\": null,\r\n\t\t\t  \"state\": {}\r\n\t\t\t}\r\n\t\t\tlet propertyIndex;\r\n\t\t\tlet intersect = intersects[0];\r\n\t\t\tif (intersect.object && intersect.object.geometry && \r\n\t\t\t\tintersect.object.geometry.attributes && \r\n\t\t\t\tintersect.object.geometry.attributes._batchid) {\r\n\t\t\t  let geometry = intersect.object.geometry;\r\n\t\t\t  let vertexIdx = intersect.faceIndex;\r\n\t\t\t  if (geometry.index) {\r\n\t\t\t\t// indexed BufferGeometry\r\n\t\t\t\tvertexIdx = geometry.index.array[intersect.faceIndex*3];\r\n\t\t\t\tpropertyIndex = geometry.attributes._batchid.data.array[vertexIdx*7+6]\r\n\t\t\t  } else {\r\n\t\t\t\t// un-indexed BufferGeometry\r\n\t\t\t\tpropertyIndex = geometry.attributes._batchid.array[vertexIdx*3];\r\n\t\t\t  }            \r\n\t\t\t  let keys = Object.keys(intersect.object.userData);\r\n\t\t\t  if (keys.length) {\r\n\t\t\t\tfor (let propertyName of keys) {\r\n\t\t\t\t  feature.properties[propertyName] = intersect.object.userData[propertyName][propertyIndex];\r\n\t\t\t\t}\r\n\t\t\t  } else {\r\n\t\t\t\tfeature.properties.batchId = propertyIndex;\r\n\t\t\t  }\r\n\t\t\t} else {\r\n\t\t\t  if (intersect.index != null) {\r\n\t\t\t\tfeature.properties.index = intersect.index;\r\n\t\t\t  } else {\r\n\t\t\t\tfeature.properties.name = this.id;\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tif (options.outline != false && (intersect.object !== this.outlinedObject || \r\n\t\t\t\t(propertyIndex != null && propertyIndex !== this.outlinePropertyIndex) \r\n\t\t\t\t  || (propertyIndex == null && intersect.index !== this.outlineIndex))) {\r\n\t\t\t  \r\n\t\t\t  //WIP\r\n\t\t\t  \r\n\t\t\t  this.outlinePass.selectedObjects = [intersect.object];\r\n  \r\n\t\t\t  // update outline\r\n\t\t\t  if (this.outlineMesh) {\r\n\t\t\t\tlet parent = this.outlineMesh.parent;\r\n\t\t\t\tparent.remove(this.outlineMesh);\r\n\t\t\t\tthis.outlineMesh = null;\r\n\t\t\t  }\r\n\t\t\t  this.outlinePropertyIndex = propertyIndex;\r\n\t\t\t  this.outlineIndex = intersect.index;\r\n\t\t\t  if (intersect.object instanceof THREE.Mesh) {\r\n\t\t\t\tthis.outlinedObject = intersect.object;\r\n\t\t\t\tlet outlineMaterial = new THREE.MeshBasicMaterial({color: options.outlineColor? options.outlineColor : 0xff0000, wireframe: true});\r\n\t\t\t\tlet outlineMesh;\r\n\t\t\t\tif (intersect.object && \r\n\t\t\t\t\tintersect.object.geometry && \r\n\t\t\t\t\tintersect.object.geometry.attributes && \r\n\t\t\t\t\tintersect.object.geometry.attributes._batchid) {\r\n\t\t\t\t  // create new geometry from faces that have same _batchid\r\n\t\t\t\t  let geometry = intersect.object.geometry;\r\n\t\t\t\t  if (geometry.index) {\r\n\t\t\t\t\tlet ip1 = geometry.index.array[intersect.faceIndex*3];\r\n\t\t\t\t\tlet idx = geometry.attributes._batchid.data.array[ip1*7+6];\r\n\t\t\t\t\tlet blockFaces = [];\r\n\t\t\t\t\tfor (let faceIndex = 0; faceIndex < geometry.index.array.length; faceIndex += 3) {\r\n\t\t\t\t\t  let p1 = geometry.index.array[faceIndex];\r\n\t\t\t\t\t  if (geometry.attributes._batchid.data.array[p1*7+6] === idx) {\r\n\t\t\t\t\t\tlet p2 = geometry.index.array[faceIndex+1];\r\n\t\t\t\t\t\tif (geometry.attributes._batchid.data.array[p2*7+6] === idx) {\r\n\t\t\t\t\t\t  let p3 = geometry.index.array[faceIndex+2];\r\n\t\t\t\t\t\t  if (geometry.attributes._batchid.data.array[p3*7+6] === idx) {\r\n\t\t\t\t\t\t\tblockFaces.push(faceIndex);\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}  \r\n\t\t\t\t\tlet highLightGeometry = new THREE.Geometry(); \r\n\t\t\t\t\tfor (let vertexCount = 0, face = 0; face < blockFaces.length; face++) {\r\n\t\t\t\t\t  let faceIndex = blockFaces[face];\r\n\t\t\t\t\t  let p1 = geometry.index.array[faceIndex];\r\n\t\t\t\t\t  let p2 = geometry.index.array[faceIndex+1];\r\n\t\t\t\t\t  let p3 = geometry.index.array[faceIndex+2];\r\n\t\t\t\t\t  let positions = geometry.attributes.position.data.array;\r\n\t\t\t\t\t  highLightGeometry.vertices.push(\r\n\t\t\t\t\t\tnew THREE.Vector3(positions[p1*7], positions[p1*7+1], positions[p1*7+2]),\r\n\t\t\t\t\t\tnew THREE.Vector3(positions[p2*7], positions[p2*7+1], positions[p2*7+2]),\r\n\t\t\t\t\t\tnew THREE.Vector3(positions[p3*7], positions[p3*7+1], positions[p3*7+2]),\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t  highLightGeometry.faces.push(new THREE.Face3(vertexCount, vertexCount+1, vertexCount+2));\r\n\t\t\t\t\t  vertexCount += 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\thighLightGeometry.computeBoundingSphere();\r\n\t\t\t\t\toutlineMesh = new THREE.Mesh(highLightGeometry, outlineMaterial);\r\n\t\t\t\t  } else {\r\n\t\t\t\t\tlet ip1 = intersect.faceIndex*3;\r\n\t\t\t\t\tlet idx = geometry.attributes._batchid.array[ip1];\r\n\t\t\t\t\tlet blockFaces = [];\r\n\t\t\t\t\tfor (let faceIndex = 0; faceIndex < geometry.attributes._batchid.array.length; faceIndex += 3) {\r\n\t\t\t\t\t  let p1 = faceIndex;\r\n\t\t\t\t\t  if (geometry.attributes._batchid.array[p1] === idx) {\r\n\t\t\t\t\t\tlet p2 = faceIndex + 1;\r\n\t\t\t\t\t\tif (geometry.attributes._batchid.array[p2] === idx) {\r\n\t\t\t\t\t\t  let p3 = faceIndex + 2;\r\n\t\t\t\t\t\t  if (geometry.attributes._batchid.array[p3] === idx) {\r\n\t\t\t\t\t\t\tblockFaces.push(faceIndex);\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet highLightGeometry = new THREE.Geometry(); \r\n\t\t\t\t\tfor (let vertexCount = 0, face = 0; face < blockFaces.length; face++) {\r\n\t\t\t\t\t  let faceIndex = blockFaces[face] * 3;\r\n\t\t\t\t\t  let positions = geometry.attributes.position.array;\r\n\t\t\t\t\t  highLightGeometry.vertices.push(\r\n\t\t\t\t\t\tnew THREE.Vector3(positions[faceIndex], positions[faceIndex+1], positions[faceIndex+2]),\r\n\t\t\t\t\t\tnew THREE.Vector3(positions[faceIndex+3], positions[faceIndex+4], positions[faceIndex+5]),\r\n\t\t\t\t\t\tnew THREE.Vector3(positions[faceIndex+6], positions[faceIndex+7], positions[faceIndex+8]),\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t  highLightGeometry.faces.push(new THREE.Face3(vertexCount, vertexCount+1, vertexCount+2));\r\n\t\t\t\t\t  vertexCount += 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\thighLightGeometry.computeBoundingSphere();   \r\n\t\t\t\t\toutlineMesh = new THREE.Mesh(highLightGeometry, outlineMaterial);\r\n\t\t\t\t  }\r\n\t\t\t\t} else {\r\n\t\t\t\t  outlineMesh = new THREE.Mesh(this.outlinedObject.geometry, outlineMaterial);\r\n\t\t\t\t}\r\n\t\t\t\toutlineMesh.position.x = this.outlinedObject.position.x+0.1;\r\n\t\t\t\toutlineMesh.position.y = this.outlinedObject.position.y+0.1;\r\n\t\t\t\toutlineMesh.position.z = this.outlinedObject.position.z+0.1;\r\n\t\t\t\toutlineMesh.quaternion.copy(this.outlinedObject.quaternion);\r\n\t\t\t\toutlineMesh.scale.copy(this.outlinedObject.scale);\r\n\t\t\t\toutlineMesh.matrix.copy(this.outlinedObject.matrix);\r\n\t\t\t\toutlineMesh.raycast = () =>{};\r\n\t\t\t\toutlineMesh.name = \"outline\";\r\n\t\t\t\toutlineMesh.wireframe = true;\r\n\t\t\t\tthis.outlinedObject.parent.add(outlineMesh);\r\n\t\t\t\tthis.outlineMesh = outlineMesh;\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t}*/\r\n\t\t\tresult.unshift(feature);\r\n\t\t\tthis.map.triggerRepaint();\r\n\t\t  } else {\r\n\t\t\tthis.outlinedObject = null;\r\n\t\t\tif (this.outlineMesh) {\r\n\t\t\t  let parent = this.outlineMesh.parent;\r\n\t\t\t  parent.remove(this.outlineMesh);\r\n\t\t\t  this.outlineMesh = null;\r\n\t\t\t  this.map.triggerRepaint();\r\n\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t  }\r\n\t  return result;\r\n\t}\r\n\t_update() {\r\n\t  this.renderer.state.reset();\r\n\t  this.renderer.render (this.scene, this.camera);\r\n\t  \r\n\t  /*if (this.loadStatus == 1) { // first render after root tile is loaded\r\n\t\tthis.loadStatus = 2;\r\n\t\tlet frustum = new THREE.Frustum();\r\n\t\tfrustum.setFromProjectionMatrix(new THREE.Matrix4().multiplyMatrices(this.camera.projectionMatrix, this.camera.matrixWorldInverse));\r\n\t\tif (this.tileset.root) {\r\n\t\t  this.tileset.root.checkLoad(frustum, this.getCameraPosition());\r\n\t\t}\r\n\t  }*/\r\n\t}\r\n\tupdate() {\r\n\t  requestAnimationFrame(()=>this._update());\r\n\t}\r\n\trender(gl, viewProjectionMatrix) {\r\n\t  this._update();\r\n\t}\r\n  }"],"names":["TileSet"],"mappings":"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E,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;CACrC,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;CACrC,EAAE;CACF,CAAC,OAAO,SAAS,CAAC;CAClB,CAAC;AACD;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;AACA;CACA;CACA;CACA;AACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA,IAAI,YAAY;CAChB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;CACF,CAAC;AACD;CACA,IAAI,cAAc;CAClB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAAC;CACH;;CC5Re,MAAM,YAAY,CAAC;CAClC,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE;CAC7F,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;CACvB,GAAG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;CAClC,GAAG,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;CACxC,GAAG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;CACpC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;CACzC,GAAG,IAAI,CAAC,WAAW,GAAG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"}